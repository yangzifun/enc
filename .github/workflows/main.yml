name: Build and Release Executables

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    name: Build on ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      # [最终修正] 构建脚本现在会检查图标文件是否存在，如果不存在则不使用--icon参数，避免构建失败。
      - name: Build with PyInstaller
        shell: bash
        run: |
          echo "Listing files in the current directory:"
          ls -l

          SCRIPT_NAME="encryptor_gui.py"

          if [ "${{ runner.os }}" == "Windows" ]; then
            # 检查 Windows 图标是否存在
            ICON_PARAM=""
            if [ -f "icon.ico" ]; then
              echo "Found icon.ico, adding it to the build."
              ICON_PARAM="--icon=icon.ico"
            else
              echo "icon.ico not found, building with default icon."
            fi
            pyinstaller --name="CryptoApp_Win" --onefile --windowed $ICON_PARAM $SCRIPT_NAME

          elif [ "${{ runner.os }}" == "macOS" ]; then
            # 检查 macOS 图标是否存在
            ICON_PARAM=""
            if [ -f "icon.icns" ]; then
              echo "Found icon.icns, adding it to the build."
              ICON_PARAM="--icon=icon.icns"
            else
              echo "icon.icns not found, building with default icon."
            fi
            pyinstaller --name="CryptoApp_macOS" --onefile --windowed $ICON_PARAM $SCRIPT_NAME

          else # Linux (无图标)
            pyinstaller --name="CryptoApp_Linux" --onefile --windowed $SCRIPT_NAME
          fi

      - name: Prepare artifact for release
        shell: bash
        run: |
          cd dist
          if [ "${{ runner.os }}" == "Windows" ]; then
            mv CryptoApp_Win.exe ../CryptoApp-Windows-x86_64.exe
          elif [ "${{ runner.os }}" == "macOS" ]; then
            mv CryptoApp_macOS ../CryptoApp-macOS-x86_64
          else
            mv CryptoApp_Linux ../CryptoApp-Linux-x86_64
          fi
          cd ..

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            CryptoApp-Windows-x86_64.exe
            CryptoApp-macOS-x86_64
            CryptoApp-Linux-x86_64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
