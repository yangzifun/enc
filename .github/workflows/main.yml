# 文件路径: .github/workflows/release.yml

name: Build and Release Executables

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    name: Build on ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      # 使用 PyInstaller 打包，强制所有平台使用 bash 以确保脚本兼容性
      - name: Build with PyInstaller
        shell: bash
        run: |
          echo "Listing files in the current directory:"
          ls -l

          # 指定主程序脚本文件名
          SCRIPT_NAME="encryptor_gui.py"

          # 根据不同操作系统使用不同参数
          if [ "${{ runner.os }}" == "Windows" ]; then
            pyinstaller --name="CryptoApp_Win" --onefile --windowed --icon="icon.ico" $SCRIPT_NAME
          elif [ "${{ runner.os }}" == "macOS" ]; then
            pyinstaller --name="CryptoApp_macOS" --onefile --windowed --icon="icon.icns" $SCRIPT_NAME
          else # Linux
            pyinstaller --name="CryptoApp_Linux" --onefile --windowed $SCRIPT_NAME
          fi

      # 准备用于发布的文件，统一重命名
      - name: Prepare artifact for release
        shell: bash
        run: |
          cd dist
          if [ "${{ runner.os }}" == "Windows" ]; then
            mv CryptoApp_Win.exe ../CryptoApp-Windows-x86_64.exe
          elif [ "${{ runner.os }}" == "macOS" ]; then
            mv CryptoApp_macOS ../CryptoApp-macOS-x86_64
          else # Linux
            mv CryptoApp_Linux ../CryptoApp-Linux-x86_64
          fi
          cd ..
          echo "Final files prepared for release:"
          ls -l

      # 创建 Release 并将打包好的文件作为附件上传
      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            CryptoApp-Windows-x86_64.exe
            CryptoApp-macOS-x86_64
            CryptoApp-Linux-x86_64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
